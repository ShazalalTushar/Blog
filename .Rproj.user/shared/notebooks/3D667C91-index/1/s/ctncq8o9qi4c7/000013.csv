"0","# Import necessary libraries"
"0","import pandas as pd"
"0","from sklearn.ensemble import IsolationForest"
"0","import matplotlib.pyplot as plt"
"0",""
"0",""
"0","titanic = pd.read_csv('titanic.csv')"
"0",""
"0","# Extract numerical features (you may choose other features based on your requirement)"
"0","numerical_features = titanic[['Age', 'Fare']]"
"0",""
"0","# Handling missing values (you may need to handle other missing values based on your dataset)"
"0","numerical_features = numerical_features.dropna()"
"0",""
"0","# Create and fit the Isolation Forest model"
"0","model = IsolationForest(contamination=0.01, random_state=42)"
"0","model.fit(numerical_features)"
"1","IsolationForest(contamination=0.01, random_state=42)
"
"0","predictions = model.predict(numerical_features)"
"0","titanic['prediction'] = predictions"
"0",""
"0","# Separate normal and anomaly points"
"0","normal_points = numerical_features[titanic['prediction'] == 1]"
"0","anomaly_points = numerical_features[titanic['prediction'] == -1]"
"0",""
"0","# Visualize the results"
"0","plt.scatter(normal_points['Age'], normal_points['Fare'], c='blue', label='Normal', alpha=0.7)"
"1","<matplotlib.collections.PathCollection object at 0x000002D6E7849AD0>
"
"0","plt.scatter(anomaly_points['Age'], anomaly_points['Fare'], c='red', label='Anomaly', alpha=0.7)"
"1","<matplotlib.collections.PathCollection object at 0x000002D6E8972FD0>
"
"0","plt.title('Isolation Forest Anomaly Detection on Titanic Dataset')"
"1","Text(0.5, 1.0, 'Isolation Forest Anomaly Detection on Titanic Dataset')
"
"1","Text(0.5, 21.19305555555555, 'Age')
"
"0","plt.ylabel('Fare')"
"1","Text(50.878472222222214, 0.5, 'Fare')
"
"0","# Add legend"
"0","plt.legend()"
"1","<matplotlib.legend.Legend object at 0x000002D6E72AE050>
"
"0","# Show the plot"
"0","plt.show()"
"0",""
"0",""
"0",""
